{"version":3,"sources":["webpack://@flagrow/bazaar/webpack/bootstrap","webpack://@flagrow/bazaar/external \"flarum.core.compat['app']\"","webpack://@flagrow/bazaar/external \"flarum.core.compat['Model']\"","webpack://@flagrow/bazaar/external \"flarum.core.compat['components/Button']\"","webpack://@flagrow/bazaar/external \"flarum.core.compat['Component']\"","webpack://@flagrow/bazaar/external \"flarum.core.compat['components/Badge']\"","webpack://@flagrow/bazaar/external \"flarum.core.compat['helpers/icon']\"","webpack://@flagrow/bazaar/external \"flarum.core.compat['components/Modal']\"","webpack://@flagrow/bazaar/external \"flarum.core.compat['utils/computed']\"","webpack://@flagrow/bazaar/external \"flarum.core.compat['components/LinkButton']\"","webpack://@flagrow/bazaar/external \"flarum.core.compat['extend']\"","webpack://@flagrow/bazaar/external \"flarum.core.compat['utils/mixin']\"","webpack://@flagrow/bazaar/external \"flarum.core.compat['components/SettingsModal']\"","webpack://@flagrow/bazaar/external \"flarum.core.compat['components/Switch']\"","webpack://@flagrow/bazaar/external \"flarum.core.compat['helpers/fullTime']\"","webpack://@flagrow/bazaar/external \"flarum.core.compat['utils/ItemList']\"","webpack://@flagrow/bazaar/external \"flarum.core.compat['utils/extract']\"","webpack://@flagrow/bazaar/external \"flarum.core.compat['components/AdminNav']\"","webpack://@flagrow/bazaar/external \"flarum.core.compat['components/AdminLinkButton']\"","webpack://@flagrow/bazaar/external \"flarum.core.compat['components/Dropdown']\"","webpack://@flagrow/bazaar/external \"flarum.core.compat['components/Placeholder']\"","webpack://@flagrow/bazaar/external \"flarum.core.compat['utils/extractText']\"","webpack://@flagrow/bazaar/external \"flarum.core.compat['utils/saveSettings']\"","webpack://@flagrow/bazaar/external \"flarum.core.compat['helpers/humanTime']\"","webpack://@flagrow/bazaar/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@flagrow/bazaar/./src/admin/models/Extension.js","webpack://@flagrow/bazaar/./src/admin/models/Task.js","webpack://@flagrow/bazaar/./src/admin/utils/ExtensionRepository.js","webpack://@flagrow/bazaar/./src/admin/utils/popupPromise.js","webpack://@flagrow/bazaar/./src/admin/components/ExtensionListItem.js","webpack://@flagrow/bazaar/./src/admin/components/BazaarLoader.js","webpack://@flagrow/bazaar/./src/admin/components/ExtensionList.js","webpack://@flagrow/bazaar/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://@flagrow/bazaar/./src/admin/components/CustomCheckbox.js","webpack://@flagrow/bazaar/./src/admin/components/ExtensionSearch.js","webpack://@flagrow/bazaar/./src/admin/utils/debounce.js","webpack://@flagrow/bazaar/./src/admin/modals/FilePermissionsModal.js","webpack://@flagrow/bazaar/./src/admin/modals/MemoryLimitModal.js","webpack://@flagrow/bazaar/./src/admin/modals/BazaarConnectModal.js","webpack://@flagrow/bazaar/./src/admin/modals/BazaarSettingsModal.js","webpack://@flagrow/bazaar/./src/admin/modals/DashboardModal.js","webpack://@flagrow/bazaar/./src/admin/components/BazaarPageHeader.js","webpack://@flagrow/bazaar/./src/admin/components/BazaarPage.js","webpack://@flagrow/bazaar/./src/admin/utils/TaskRepository.js","webpack://@flagrow/bazaar/./src/admin/components/TaskListItem.js","webpack://@flagrow/bazaar/./src/admin/components/TasksPage.js","webpack://@flagrow/bazaar/./src/admin/index.js","webpack://@flagrow/bazaar/./src/admin/addBazaarPage.js","webpack://@flagrow/bazaar/./src/admin/addTasksPage.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","flarum","core","compat","_inheritsLoose","subClass","superClass","constructor","__proto__","Extension_Extension","mixin_default","external_flarum_core_compat_Model_default","a","package","attribute","title","description","license","icon","locale","stars","forks","downloads","installed","enabled","pending","installed_version","highest_version","outdated","flarum_id","premium","subscribed","can_install","computed_default","can_uninstall","can_enable","can_disable","canCheckout","canUnsubscribe","canSafelyUnsubscribe","favorited","Task_Task","status","command","output","created_at","started_at","finished_at","ExtensionRepository_ExtensionRepository","ExtensionRepository","loading","this","extensions","prop","requestError","redraw","installExtension","extension","_this","external_flarum_core_compat_app_default","request","method","url","forum","timeout","data","id","then","response","updateExtensionInRepository","catch","installFailure","resetNavigation","loadNextPage","uninstallExtension","_this2","uninstallFailure","favoriteExtension","_this3","favorite","premiumExtensionSubscribe","buy","settings","waitForUrl","width","height","$window","$","window","deferred","popup","open","interval","setInterval","closed","clearInterval","reject","document","URL","close","resolve","e","promise","popupPromise","location","reload","alert","translator","trans","premiumExtensionUnsubscribe","updateExtension","_this4","toggleExtension","_this5","disableExtension","enableExtension","getExtensionIndex","findIndex","ext","store","createRecord","ExtensionListItem_ExtensionListItem","config","isInitialized","props","tooltip","container","view","connected","controls","controlItems","toArray","badges","className","data-id","style","icon_default","length","Dropdown_default","buttonClassName","menuClassName","app","vendor","split","items","ItemList_default","repository","favoriteTrans","add","Button_default","component","children","onclick","extensionSettings","disabled","Badge_default","type","label","new","external_flarum_core_compat_Component_default","BazaarLoader_BazaarLoader","error","hidden","LinkButton_default","href","target","ExtensionList_ExtensionList","init","moreResults","resultMeta","refresh","current","pages_current","total","pages_total","loadMore","text","authorized","Placeholder_default","map","update","params","clear","loadResults","results","parseResults","offset","requestParams","page","include","join","find","push","apply","payload","links","next","meta","lazyRedraw","out","filter","sort","sortMap","q","relevance","_extends","assign","arguments","source","CustomCheckbox_CustomCheckbox","attrs","state","extractText_default","extract_default","onchange","getButtonContent","ExtensionSearch_ExtensionSearch","updateDebounce","func","wait","immediate","context","args","callNow","clearTimeout","setTimeout","debounce","onsubmit","oninput","withAttr","term","search","placeholder","checked","toggleFilter","FilePermissionsModal_FilePermissionsModal","content","paths","file_permissions","forEach","path","Modal_default","MemoryLimitModal_MemoryLimitModal","memory_requested","memory_limit","required","limit","BazaarConnectModal_BazaarConnectModal","flagrowHost","host","connect","redirect","BazaarSettingsModal_BazaarSettingsModal","form","for","Switch_default","setting","bidi","SettingsModal_default","DashboardModal_DashboardModal","syncing","updateSetting","submitButton","_saveSettings","saveSettings_default","BazaarPageHeader_BazaarPageHeader","header","buttons","concat","pagesButtons","settingsButton","requirementsButtons","connectedButtons","modal","show","memory_limit_met","components","routeName","route","active","BazaarPage_BazaarPage","extensionList","updateResults","render","stickyParams","param","TaskRepository_ExtensionRepository","tasks","nextPageUrl","result","newTasks","TaskListItem_TaskListItem","extended","task","iconName","humanTime_default","colspan","fullTime_default","TasksPage_TasksPage","loader","taskGroups","group","currentGroup","today","Date","setHours","taskDate","initializers","models","routes","external_flarum_core_compat_extend_","AdminNav_default","AdminLinkButton_default"],"mappings":"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","file":"admin.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 23);\n","module.exports = flarum.core.compat['app'];","module.exports = flarum.core.compat['Model'];","module.exports = flarum.core.compat['components/Button'];","module.exports = flarum.core.compat['Component'];","module.exports = flarum.core.compat['components/Badge'];","module.exports = flarum.core.compat['helpers/icon'];","module.exports = flarum.core.compat['components/Modal'];","module.exports = flarum.core.compat['utils/computed'];","module.exports = flarum.core.compat['components/LinkButton'];","module.exports = flarum.core.compat['extend'];","module.exports = flarum.core.compat['utils/mixin'];","module.exports = flarum.core.compat['components/SettingsModal'];","module.exports = flarum.core.compat['components/Switch'];","module.exports = flarum.core.compat['helpers/fullTime'];","module.exports = flarum.core.compat['utils/ItemList'];","module.exports = flarum.core.compat['utils/extract'];","module.exports = flarum.core.compat['components/AdminNav'];","module.exports = flarum.core.compat['components/AdminLinkButton'];","module.exports = flarum.core.compat['components/Dropdown'];","module.exports = flarum.core.compat['components/Placeholder'];","module.exports = flarum.core.compat['utils/extractText'];","module.exports = flarum.core.compat['utils/saveSettings'];","module.exports = flarum.core.compat['helpers/humanTime'];","export default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}","import Model from 'flarum/Model';\nimport mixin from 'flarum/utils/mixin';\nimport computed from 'flarum/utils/computed';\n\nexport default class Extension extends mixin(Model, {\n    package: Model.attribute('package'),\n    title: Model.attribute('title'),\n    description: Model.attribute('description'),\n    license: Model.attribute('license'),\n    icon: Model.attribute('icon'),\n    locale: Model.attribute('locale'),\n\n    stars: Model.attribute('stars'),\n    forks: Model.attribute('forks'),\n    downloads: Model.attribute('downloads'),\n\n    installed: Model.attribute('installed'),\n    enabled: Model.attribute('enabled'),\n    pending: Model.attribute('pending'),\n    installed_version: Model.attribute('installed_version'),\n    highest_version: Model.attribute('highest_version'),\n    outdated: Model.attribute('outdated'),\n\n    flarum_id: Model.attribute('flarum_id'),\n\n    premium: Model.attribute('premium'),\n    subscribed: Model.attribute('subscribed'),\n\n    // Install/uninstall\n    // Extension is available if it's either non-premium or premium & subscribed\n    can_install: computed('installed', 'premium', 'subscribed', (installed, premium, subscribed) => !installed && (!premium || subscribed)),\n    can_uninstall: computed('installed', 'enabled', (installed, enabled) => installed && !enabled),\n\n    // Enable/disable\n    can_enable: computed('installed', 'enabled', (installed, enabled) => installed && !enabled),\n    can_disable: computed('installed', 'enabled', (installed, enabled) => installed && enabled),\n\n    canCheckout: Model.attribute('canCheckout'),\n    canUnsubscribe: Model.attribute('canUnsubscribe'),\n    canSafelyUnsubscribe: computed('canUnsubscribe', 'installed', (canUnsubscribe, installed) => canUnsubscribe && !installed),\n\n    favorited: Model.attribute('favorited'),\n}) {}\n","import Model from 'flarum/Model';\nimport mixin from 'flarum/utils/mixin';\n\nexport default class Task extends mixin(Model, {\n    status: Model.attribute('status'),\n    command: Model.attribute('command'),\n    package: Model.attribute('package'),\n    output: Model.attribute('output'),\n    created_at: Model.attribute('created_at'),\n    started_at: Model.attribute('started_at'),\n    finished_at: Model.attribute('finished_at')\n}) {}\n","import app from \"flarum/app\";\nimport popupPromise from './popupPromise';\n\nexport default class ExtensionRepository {\n    constructor(loading) {\n        this.extensions = m.prop([]);\n        this.loading = loading;\n    }\n\n    /**\n     * Handles a request error\n     */\n    requestError() {\n        // If an error occured, we can clear the loading overlay\n        // The error means it's not processing anymore\n        this.loading('error');\n\n        // Depending on how fast the \"Oops! Something went wrong\" popup appears,\n        // the loading change is not taken into account. Use redraw to force remove the overlay\n        m.redraw();\n    }\n\n    /**\n     * Install an extension.\n     * @param extension\n     */\n    installExtension(extension) {\n        this.loading(true);\n\n        app.request({\n            method: 'POST',\n            url: app.forum.attribute('apiUrl') + '/bazaar/extensions',\n            timeout: 0,\n            data: {\n                id: extension.id()\n            }\n        }).then(response => {\n            this.updateExtensionInRepository(response)\n        }).catch(() => this.requestError());\n    }\n\n    /**\n     * Handles an installation failure.\n     * @param extension\n     */\n    installFailure(extension) {\n        this.resetNavigation();\n        this.loadNextPage();\n    }\n\n    /**\n     * Uninstall an extension.\n     * @param extension\n     */\n    uninstallExtension(extension) {\n        this.loading(true);\n\n        app.request({\n            method: 'DELETE',\n            timeout: 0,\n            url: app.forum.attribute('apiUrl') + '/bazaar/extensions/' + extension.id()\n        }).then(response => {\n            this.updateExtensionInRepository(response)\n        }).catch(() => this.requestError());\n    }\n\n    /**\n     * Handles an uninstall failure.\n     * @param extension\n     */\n    uninstallFailure(extension) {\n        this.resetNavigation();\n        this.loadNextPage();\n    }\n\n    /**\n     * Processing (de-) favoriting extensions.\n     * @param extension\n     */\n    favoriteExtension(extension) {\n        this.loading(true);\n\n        app.request({\n            method: 'post',\n            url: app.forum.attribute('apiUrl') + '/bazaar/extensions/' + extension.id() + '/favorite',\n            data: {\n                favorite: extension.favorited() != true\n            }\n        }).then(response => {\n            this.updateExtensionInRepository(response)\n        }).catch(() => this.requestError());\n    }\n\n    premiumExtensionSubscribe(extension, buy = true) {\n        //this.loading(true);\n\n        const popup = popupPromise({\n            url: app.forum.attribute('apiUrl') + '/bazaar/redirect/' + (buy ? '' : 'un') + 'subscribe/' + extension.id(),\n            waitForUrl: app.forum.attribute('apiUrl') + '/bazaar/callback/subscription',\n        });\n\n        popup.then(() => {\n            window.location.reload();\n        }).catch(() => {\n            alert(app.translator.trans('flagrow-bazaar.admin.page.extension.subscribe_check_failed'));\n        });\n    }\n\n    premiumExtensionUnsubscribe(extension) {\n        this.premiumExtensionSubscribe(extension, false);\n    }\n\n    /**\n     * Updates an extension.\n     * @param extension\n     */\n    updateExtension(extension) {\n        this.loading(true);\n\n        app.request({\n            url: app.forum.attribute('apiUrl') + '/bazaar/extensions/' + extension.id(),\n            timeout: 0,\n            method: 'PATCH'\n        }).then(response => {\n            this.updateExtensionInRepository(response)\n        }).then(() => {\n            location.reload();\n        }).catch(() => this.requestError());\n    }\n\n    /**\n     * Toggles an extension (enable or disable).\n     * @param extension\n     */\n    toggleExtension(extension) {\n        this.loading(true);\n\n        const enabled = extension.enabled();\n\n        app.request({\n            url: app.forum.attribute('apiUrl') + '/bazaar/extensions/' + extension.id() + '/toggle',\n            method: 'PATCH',\n            data: {enabled: !enabled}\n        }).then(response => {\n            this.updateExtensionInRepository(response)\n        }).catch(() => this.requestError());\n    }\n\n    /**\n     * Disable an extension.\n     * @param extension\n     */\n    disableExtension(extension) {\n        this.toggleExtension(extension);\n    }\n\n    /**\n     * Enable an extension.\n     * @param extension\n     */\n    enableExtension(extension) {\n        this.toggleExtension(extension);\n    }\n\n    /**\n     * Loads the index of this extension in the extensions array.\n     * @param extension\n     * @returns {number}\n     */\n    getExtensionIndex(extension) {\n        return this.extensions().findIndex(ext => ext.id() == extension.id());\n    }\n\n    /**\n     * Updates an extension and takes care of updating its state in the extension page too.\n     * @param extension\n     * @param property\n     * @param value\n     */\n    updateExtensionInRepository(response) {\n        this.loading(false);\n\n        let extension = app.store.createRecord('bazaar-extensions', response.data);\n        this.extensions()[this.getExtensionIndex(extension)] = extension;\n        m.redraw();\n    }\n}\n","export default function(settings = {})\n{\n    const url = settings.url || '/';\n    const waitForUrl = settings.waitForUrl || null;\n    const width = settings.width || 600;\n    const height = settings.height || 400;\n    const $window = $(window);\n\n    // The new Promise polyfill of Mithril v1 is a lot better\n    const deferred = m.deferred();\n\n    const popup = window.open(url, 'bazaarPopup',\n        `width=${width},` +\n        `height=${height},` +\n        `top=${$window.height() / 2 - height / 2},` +\n        `left=${$window.width() / 2 - width / 2},` +\n        'status=no,scrollbars=no,resizable=no');\n\n    const interval = window.setInterval(() => {\n        try {\n            if (popup.closed) {\n                window.clearInterval(interval);\n                deferred.reject();\n            } else if (popup.document.URL === waitForUrl) {\n                window.clearInterval(interval);\n                popup.close();\n                deferred.resolve();\n            }\n        } catch (e) {\n            // Ignore errors, these will be cross-origin exceptions\n        }\n    }, 500);\n\n    return deferred.promise;\n}\n","import Component from \"flarum/Component\";\nimport icon from \"flarum/helpers/icon\";\nimport ItemList from \"flarum/utils/ItemList\";\nimport Button from \"flarum/components/Button\";\nimport Dropdown from \"flarum/components/Dropdown\";\nimport Badge from 'flarum/components/Badge';\n\nexport default class ExtensionListItem extends Component {\n\n\n    config(isInitialized) {\n        if (isInitialized) return;\n\n        // Be careful to always use a `key` with this component or this mis-align the tooltips if items are added or removed\n        if (this.props.extension.description()) this.$('.ExtensionIcon').tooltip({container: 'body'});\n    }\n\n    view() {\n        const extension = this.props.extension;\n        const connected = this.props.connected || false;\n        const controls = this.controlItems(extension, connected).toArray();\n        const badges = this.badges(extension).toArray();\n\n        return <li className={\n            'ExtensionListItem ' +\n            (extension.enabled() ? 'enabled ' : 'disabled ') +\n            (extension.installed() ? 'installed ' : 'uninstalled ') +\n            (extension.outdated() ? 'outdated ' : '') +\n            (extension.pending() ? 'pending ' : '')\n        } key={extension.id()} data-id={extension.id()}>\n            <div className=\"ExtensionListItem-content\">\n                      <span className=\"ExtensionListItem-icon ExtensionIcon\" style={extension.icon() || ''} title={extension.description()}>\n                        {extension.icon() ? icon('fas fa-' + extension.icon().name) : ''}\n                      </span>\n\n\n                <ul className=\"ExtensionListItem-badges badges\">\n                    {badges}\n                </ul>\n                {controls.length ? (\n                    <Dropdown\n                        className=\"ExtensionListItem-controls\"\n                        buttonClassName=\"Button Button--icon Button--flat\"\n                        menuClassName=\"Dropdown-menu--right\"\n                        icon=\"fas fa-ellipsis-h\">\n                        {controls}\n                    </Dropdown>\n                ) : ''}\n                <label className=\"ExtensionListItem-title\">\n                    {extension.title() || extension.package()}\n                </label>\n                <label className=\"ExtensionListItem-vendor\">\n                    {app.translator.trans('flagrow-bazaar.admin.page.extension.vendor', {\n                        vendor: extension.package().split('/')[0]\n                    })}\n                </label>\n                <div className=\"ExtensionListItem-version\">{extension.installed_version() || extension.highest_version()}</div>\n            </div>\n        </li>;\n    }\n\n    controlItems(extension, connected) {\n        const items = new ItemList();\n        const repository = this.props.repository;\n\n        const favoriteTrans = extension.favorited() ? 'flagrow-bazaar.admin.page.button.remove_favorite_button' : 'flagrow-bazaar.admin.page.button.favorite_button';\n\n        if (connected) {\n            items.add('favorite', Button.component({\n                icon: 'fas fa-heart',\n                children: app.translator.trans(favoriteTrans),\n                onclick: () => {\n                    repository.favoriteExtension(extension);\n                }\n            }));\n        }\n\n        if (! extension.pending()) {\n            if (extension.enabled() && app.extensionSettings[name]) {\n                items.add('settings', Button.component({\n                    icon: 'fas fa-cog',\n                    children: app.translator.trans('core.admin.extensions.settings_button'),\n                    onclick: app.extensionSettings[name]\n                }));\n            }\n\n            if (extension.can_uninstall()) {\n                items.add('uninstall', Button.component({\n                    icon: 'fas fa-minus-square',\n                    children: app.translator.trans('flagrow-bazaar.admin.page.button.uninstall'),\n                    onclick: () => {\n                        repository.uninstallExtension(extension);\n                    }\n                }));\n            }\n\n            if (extension.can_enable()) {\n                items.add('enable', Button.component({\n                    icon: 'fas fa-check-square',\n                    children: app.translator.trans('flagrow-bazaar.admin.page.button.enable'),\n                    onclick: () => {\n                        repository.enableExtension(extension);\n                    }\n                }));\n            }\n\n            if (extension.installed() && extension.outdated()) {\n                items.add('update', Button.component({\n                    icon: 'fas fa-level-up',\n                    children: app.translator.trans('flagrow-bazaar.admin.page.button.update'),\n                    onclick: () => {\n                        repository.updateExtension(extension);\n                    }\n                }));\n            }\n\n            if (extension.can_disable()) {\n                items.add('disable', Button.component({\n                    icon: 'fas fa-square',\n                    children: app.translator.trans('flagrow-bazaar.admin.page.button.disable'),\n                    onclick: () => {\n                        repository.disableExtension(extension);\n                    }\n                }));\n            }\n\n            if (extension.can_install()) {\n                items.add('install', Button.component({\n                    icon: 'fas fa-plus-square',\n                    children: app.translator.trans('flagrow-bazaar.admin.page.button.install'),\n                    onclick: () => {\n                        repository.installExtension(extension);\n                    }\n                }));\n            }\n        }\n\n        if (extension.premium() && !connected) {\n            items.add('subscribe', Button.component({\n                disabled: true,\n                icon: 'fas fa-shopping-cart',\n                children: app.translator.trans('flagrow-bazaar.admin.page.button.connect_to_subscribe'),\n            }));\n        }\n\n        if (extension.canCheckout() && connected) {\n            items.add('subscribe', Button.component({\n                icon: 'fas fa-shopping-cart',\n                children: app.translator.trans('flagrow-bazaar.admin.page.button.subscribe'),\n                onclick: () => {\n                    repository.premiumExtensionSubscribe(extension);\n                }\n            }));\n        }\n\n        if (extension.canSafelyUnsubscribe() && connected) {\n            items.add('unsubscribe', Button.component({\n                icon: 'fas fa-ban',\n                children: app.translator.trans('flagrow-bazaar.admin.page.button.unsubscribe'),\n                onclick: () => {\n                    repository.premiumExtensionUnsubscribe(extension);\n                }\n            }));\n        }\n\n        return items;\n    }\n\n    /**\n     * Get the Badge components that apply to this discussion.\n     *\n     * @return {ItemList}\n     * @public\n     */\n    badges(extension) {\n        const items = new ItemList();\n\n        if (extension.subscribed()) {\n            items.add('subscribed', <Badge icon=\"fas fa-shopping-cart\"\n                type=\"subscribed\"\n                label={app.translator.trans('flagrow-bazaar.admin.page.extension.subscribed')} />);\n        } else if (extension.premium()) {\n            items.add('premium', <Badge icon=\"fas fa-certificate\"\n                type=\"premium\"\n                label={app.translator.trans('flagrow-bazaar.admin.page.extension.premium')} />);\n        }\n        if (extension.pending()) {\n            items.add('pending', <Badge icon=\"fas fa-circle-notch fa-spin\"\n                type=\"pending\"\n                label={app.translator.trans('flagrow-bazaar.admin.page.extension.pending')} />);\n        }\n\n        if (extension.installed() && extension.outdated()) {\n            items.add('outdated', <Badge icon=\"fas fa-warning\"\n                type=\"outdated\"\n                label={app.translator.trans('flagrow-bazaar.admin.page.extension.outdated',\n                    { new: extension.highest_version() })} />)\n        }\n\n        if (extension.favorited()) {\n            items.add('favorited', <Badge icon=\"fas fa-heart\"\n                type=\"favorited\"\n                label={app.translator.trans('flagrow-bazaar.admin.page.extension.favorited')} />)\n        }\n\n        if (extension.installed() && !extension.enabled()) {\n            items.add('installed', <Badge icon=\"fas fa-plus-square\"\n                type=\"installed\"\n                label={app.translator.trans('flagrow-bazaar.admin.page.extension.installed')} />)\n        }\n\n        if (extension.enabled()) {\n            items.add('enabled', <Badge icon=\"fas fa-check-square\"\n                type=\"enabled\"\n                label={app.translator.trans('flagrow-bazaar.admin.page.extension.enabled')} />)\n        }\n\n        return items;\n    }\n}\n","import Component from 'flarum/Component';\nimport icon from \"flarum/helpers/icon\";\nimport Button from 'flarum/components/Button';\nimport LinkButton from 'flarum/components/LinkButton';\n\nexport default class BazaarLoader extends Component {\n\n    view() {\n        const error = this.props.loading() === 'error';\n\n        return m('div', {\n            className: 'Bazaar--Loader ' + (error ? 'Error' : null),\n            hidden: this.props.loading() === false\n        }, [\n            m('.Loader-modal', [\n                m('.Loader-icon', icon(error ? 'fas fa-exclamation-triangle' : 'fas fa-shopping-bag')),\n                m('div', [\n                    m('p', app.translator.trans(error ? 'flagrow-bazaar.admin.loader.error' : 'flagrow-bazaar.admin.loader.is_loading')),\n                    error ? [\n                        Button.component({\n                            className: 'Button Button--block',\n                            icon: 'fas fa-sync',\n                            onclick: () => location.reload(),\n                            children: app.translator.trans('flagrow-bazaar.admin.loader.refresh')\n                        }),\n                        Button.component({\n                            className: 'Button Button--block',\n                            icon: 'fas fa-times',\n                            onclick: () => this.props.loading(false),\n                            children: app.translator.trans('flagrow-bazaar.admin.loader.close')\n                        }),\n                        LinkButton.component({\n                            className: 'Button Button--block',\n                            icon: 'fas fa-bug',\n                            href: 'https://github.com/flagrow/bazaar/issues',\n                            target: '_blank',\n                            config: {}, // Disable internal Mithril routing\n                            children: app.translator.trans('flagrow-bazaar.admin.loader.report_issue')\n                        }),\n                    ] : null\n                ])\n            ])\n        ])\n    }\n}\n","import Component from 'flarum/Component';\nimport Button from 'flarum/components/Button';\nimport ExtensionListItem from './ExtensionListItem';\nimport BazaarLoader from \"./BazaarLoader\";\nimport Placeholder from 'flarum/components/Placeholder';\n\nexport default class ExtensionList extends Component {\n    init() {\n        /**\n         * Whether or not discussion results are loading.\n         *\n         * @type {Boolean}\n         */\n        this.loading = this.props.loading;\n\n        /**\n         * Whether or not there are more results that can be loaded.\n         *\n         * @type {Boolean}\n         */\n        this.moreResults = false;\n        this.resultMeta = {};\n\n        // this.repository = new ExtensionRepository(this.loading);\n\n        /**\n         * The discussions in the discussion list.\n         *\n         * @type {Extension[]}\n         */\n        this.extensions = [];\n\n        this.refresh();\n    }\n\n\n\n    view() {\n        let loading;\n\n        if (this.loading()) {\n            loading = BazaarLoader.component({loading: this.loading});\n        } else if (this.moreResults) {\n            loading = [\n                Button.component({\n                    children: app.translator.trans('flagrow-bazaar.admin.page.button.more', {current: this.resultMeta.pages_current + 1, total: this.resultMeta.pages_total}),\n                    className: 'Button Button--primary',\n                    onclick: this.loadMore.bind(this)\n                })\n            ];\n        }\n\n        if (this.extensions.length === 0 && !this.loading) {\n            let text = app.translator.trans('flagrow-bazaar.admin.page.state.no_results_available');\n\n            if (! this.props.authorized) {\n                text = app.translator.trans('flagrow-bazaar.admin.page.state.not_authorized');\n            }\n\n            return (\n                <div className=\"DiscussionList\">\n                    {Placeholder.component({text})}\n                </div>\n            );\n        }\n\n        return (\n            <div className=\"ExtensionList-wrapper\">\n                <ul className=\"ExtensionList\">\n                    {this.extensions.map(extension => {\n                        return ExtensionListItem.component({\n                                extension: extension,\n                                repository: this.props.repository,\n                                connected: this.props.connected,\n                                key: extension.package(),\n                            });\n                    })}\n                </ul>\n                <div className=\"ExtensionList-loadMore\">\n                    {loading}\n                </div>\n            </div>\n        );\n    }\n\n    update(params) {\n        this.props.params = params;\n\n        this.refresh();\n    }\n\n    /**\n     * Clear and reload the discussion list.\n     *\n     * @public\n     */\n    refresh(clear = true) {\n        if (clear) {\n            this.loading(true);\n            this.extensions = [];\n        }\n\n        return this.loadResults().then(\n            results => {\n                this.extensions = [];\n                this.parseResults(results);\n            },\n            () => {\n                this.loading(false);\n                m.redraw();\n            }\n        );\n    }\n\n    /**\n     * Load a new page of discussion results.\n     *\n     * @param {Integer} offset The index to start the page at.\n     * @return {Promise}\n     */\n    loadResults(offset) {\n        const params = this.requestParams();\n        params.page = {offset};\n        params.include = params.include.join(',');\n\n        return app.store.find('bazaar/extensions', params);\n    }\n\n    /**\n     * Parse results and append them to the discussion list.\n     *\n     * @param {Extension[]} results\n     * @return {Extension[]}\n     */\n    parseResults(results) {\n        [].push.apply(this.extensions, results);\n\n        this.loading(false);\n        this.moreResults = !!results.payload.links.next;\n        this.resultMeta = results.payload.meta || {};\n\n        m.lazyRedraw();\n\n        return results;\n    }\n\n    /**\n     * Load the next page of discussion results.\n     *\n     * @public\n     */\n    loadMore() {\n        this.loading(true);\n\n        this.loadResults(this.extensions.length)\n            .then(this.parseResults.bind(this));\n    }\n\n    /**\n     * Get the parameters that should be passed in the API request to get\n     * discussion results.\n     *\n     * @return {Object}\n     * @api\n     */\n    requestParams() {\n        const params = this.props.params;\n        const out = {include: [], filter: {}};\n\n        out.sort = this.sortMap()[params.sort];\n\n        if (params.q) {\n            out.filter.q = params.q;\n        }\n\n        if (params.filter) {\n            out.filter[params.filter] = true;\n        }\n\n        return out;\n    }\n\n    /**\n     * Get a map of sort keys (which appear in the URL, and are used for\n     * translation) to the API sort value that they represent.\n     *\n     * @return {Object}\n     */\n    sortMap() {\n        const map = {};\n\n        if (this.props.params.q) {\n            map.relevance = '';\n        }\n\n        return map;\n    }\n}\n","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","import Button from \"flarum/components/Button\";\nimport icon from 'flarum/helpers/icon';\nimport extract from 'flarum/utils/extract';\nimport extractText from 'flarum/utils/extractText';\n\nexport default class CustomCheckbox extends Button {\n    view() {\n        const attrs = Object.assign({}, this.props);\n\n        delete attrs.state;\n        delete attrs.children;\n\n        attrs.className = attrs.className || '';\n        attrs.type = attrs.type || 'button';\n\n        if (this.props.state) attrs.className += ' active';\n\n        // If nothing else is provided, we use the textual button content as tooltip\n        if (!attrs.title && this.props.children) {\n            attrs.title = extractText(this.props.children);\n        }\n\n        const iconName = extract(attrs, 'icon');\n        if (iconName) attrs.className += ' hasIcon';\n\n        const loading = extract(attrs, 'loading');\n        if (attrs.disabled || loading) {\n            attrs.className += ' disabled' + (loading ? ' loading' : '');\n            delete attrs.onclick;\n        }\n\n        return (\n            <button {...attrs}\n                onclick={this.onchange.bind(this)}\n                >\n                {this.getButtonContent()}\n            </button>\n        );\n    }\n\n    /**\n     * Run a callback when the state of the checkbox is changed.\n     *\n     * @param {Boolean} checked\n     * @protected\n     */\n    onchange() {\n        if (this.props.onchange) this.props.onchange(! this.props.state, this);\n    }\n}\n","import Component from \"flarum/Component\";\nimport CustomCheckbox from \"./CustomCheckbox\";\nimport debounce from \"../utils/debounce\";\n\nexport default class ExtensionSearch extends Component {\n    init() {\n        this.updateDebounce = debounce(() => {\n            if (this.props.onsubmit) this.props.onsubmit(this.props.params);\n        }, 500);\n    }\n\n    view() {\n        return m('div', [\n            m('fieldset', {className: 'ExtensionSearch'},\n                m('input[type=text].FormControl', {\n                    value: this.props.params.q || '',\n                    oninput: m.withAttr('value', term => this.search(term)),\n                    placeholder: app.translator.trans('flagrow-bazaar.admin.search.placeholder'),\n                })\n            ),\n            m('div', {className: 'ExtensionFilters ButtonGroup'}, [\n                CustomCheckbox.component({\n                    icon: 'fas fa-level-up',\n                    className: 'Button hasIcon',\n                    state: this.props.params.filter == 'update_required',\n                    onchange: (checked) => this.toggleFilter('update_required', checked),\n                    children: app.translator.trans('flagrow-bazaar.admin.search.filter_update_required')\n                }),\n                CustomCheckbox.component({\n                    icon: 'fas fa-circle-notch',\n                    className: 'Button hasIcon',\n                    state: this.props.params.filter == 'pending',\n                    onchange: (checked) => this.toggleFilter('pending', checked),\n                    children: app.translator.trans('flagrow-bazaar.admin.search.filter_pending')\n                }),\n                CustomCheckbox.component({\n                    icon: 'fas fa-plus-square',\n                    className: 'Button hasIcon',\n                    state: this.props.params.filter == 'installed',\n                    onchange: (checked) => this.toggleFilter('installed', checked),\n                    children: app.translator.trans('flagrow-bazaar.admin.search.filter_installed')\n                }),\n                this.connected ? [\n                    CustomCheckbox.component({\n                        icon: 'fas fa-heart',\n                        className: 'Button hasIcon',\n                        state: this.props.params.filter == 'favorited',\n                        onchange: (checked) => this.toggleFilter('favorited', checked),\n                        children: app.translator.trans('flagrow-bazaar.admin.search.filter_favorited')\n                    }),\n                    CustomCheckbox.component({\n                        icon: 'fas fa-shopping-cart',\n                        className: 'Button hasIcon',\n                        state: this.props.params.filter == 'subscribed',\n                        onchange: (checked) => this.toggleFilter('subscribed', checked),\n                        children: app.translator.trans('flagrow-bazaar.admin.search.filter_subscribed')\n                    }),\n                ] : '',\n                CustomCheckbox.component({\n                    icon: 'fas fa-certificate',\n                    className: 'Button hasIcon',\n                    state: this.props.params.filter == 'premium',\n                    onchange: (checked) => this.toggleFilter('premium', checked),\n                    children: app.translator.trans('flagrow-bazaar.admin.search.filter_premium')\n                }),\n            ])\n        ])\n    }\n\n    toggleFilter(filter, checked) {\n        if (checked) {\n            this.props.params.filter = filter;\n        } else {\n            this.props.params.filter = null;\n        }\n\n        this.updateDebounce();\n    }\n\n    search(term) {\n        this.props.params.q = term;\n\n        this.updateDebounce();\n    }\n}\n","/**\n * Based on _.debounce from underscore.js\n * Copyright (c) 2009-2017 Jeremy Ashkenas, DocumentCloud and Investigative\n * @see https://davidwalsh.name/javascript-debounce-function\n *\n * Returns a function, that, as long as it continues to be invoked, will not\n * be triggered. The function will be called after it stops being called for\n * N milliseconds. If `immediate` is passed, trigger the function on the\n * leading edge, instead of the trailing.\n */\nexport default function (func, wait, immediate) {\n    let timeout;\n    return function () {\n        let context = this, args = arguments;\n        let later = function () {\n            timeout = null;\n            if (!immediate) func.apply(context, args);\n        };\n        let callNow = immediate && !timeout;\n        clearTimeout(timeout);\n        timeout = setTimeout(later, wait);\n        if (callNow) func.apply(context, args);\n    };\n};\n","import Modal from \"flarum/components/Modal\";\n\nexport default class FilePermissionsModal extends Modal {\n    className() {\n        return 'FilePermissionsModal';\n    }\n\n    title() {\n        return app.translator.trans('flagrow-bazaar.admin.modal.requirements.file-permissions.title');\n    }\n\n    content() {\n        var permissions = this.props.file_permissions;\n        var paths = [];\n\n        permissions.forEach(path => {\n            paths.push(m('li', m('span', {className: 'code'}, path)))\n        })\n\n        return m('div', {className: 'Modal-body'}, [\n                m('p', app.translator.trans(\n                    'flagrow-bazaar.admin.modal.requirements.file-permissions.description',\n                    {a: <a href=\"https://github.com/flagrow/bazaar/wiki/File-permissions\" target=\"_blank\"/>}\n                )),\n                m('ul', paths)\n            ]\n        );\n    }\n}\n","import Modal from \"flarum/components/Modal\";\n\nexport default class MemoryLimitModal extends Modal {\n    className() {\n        return 'MemoryLimitModal';\n    }\n\n    title() {\n        return app.translator.trans('flagrow-bazaar.admin.modal.requirements.php-memory_limit.title');\n    }\n\n    content() {\n        let memory_requested = this.props.memory_requested;\n        let memory_limit = this.props.memory_limit;\n\n        return m(\n            'div',\n            {className: 'Modal-body'},\n            app.translator.trans(\n                'flagrow-bazaar.admin.modal.requirements.php-memory_limit.description',\n                {\n                    required: memory_requested,\n                    limit: memory_limit,\n                    a: <a href=\"https://github.com/flagrow/bazaar/wiki/PHP-memory-limit\" target=\"_blank\"/>\n                }\n            )\n        );\n    }\n}\n","import Modal from \"flarum/components/Modal\";\nimport Button from \"flarum/components/Button\";\n\nexport default class BazaarConnectModal extends Modal {\n    className() {\n        return 'FilePermissionsModal';\n    }\n\n    title() {\n        return app.translator.trans('flagrow-bazaar.admin.modal.connect-bazaar.title');\n    }\n\n    content() {\n        let flagrowHost = this.props.flagrowHost;\n\n        return m('div', {className: 'Modal-body'}, [\n                m('p', app.translator.trans('flagrow-bazaar.admin.modal.connect-bazaar.description', {host: flagrowHost})),\n                m('div', {className: \"App-primaryControl\"}, [\n                    Button.component({\n                        type: 'submit',\n                        className: 'Button Button--primary Button--block',\n                        disabled: false,\n                        icon: 'check',\n                        children: app.translator.trans('flagrow-bazaar.admin.page.button.connect')\n                    })\n                ])\n            ]\n        );\n    }\n\n    connect() {\n        var popup = window.open();\n\n        app.request({\n            method: 'GET',\n            url: app.forum.attribute('apiUrl') + '/bazaar/connect'\n        }).then(response => {\n            if (response && response.redirect) {\n                popup.location = response.redirect;\n            } else {\n                popup.close()\n            }\n        });\n    }\n\n    /**\n     * Handle the modal form's submit event.\n     *\n     * @param {Event} e\n     */\n    onsubmit() {\n        this.connect();\n    }\n}\n","import app from 'flarum/app';\nimport SettingsModal from 'flarum/components/SettingsModal';\nimport Switch from 'flarum/components/Switch';\n\nexport default class BazaarSettingsModal extends SettingsModal {\n\n  title() {\n    return app.translator.trans('flagrow-bazaar.admin.modal.settings.title');\n  }\n\n  form() {\n    return [\n      m('div', { className: 'Form-group' }, [\n        m('label', { for: 'use-cron' }, app.translator.trans('flagrow-bazaar.admin.modal.settings.field.use_cron_for_tasks.label')),\n        Switch.component({\n          state: this.setting('flagrow.bazaar.use_cron_for_tasks')(),\n          onchange: this.setting('flagrow.bazaar.use_cron_for_tasks'),\n          children: app.translator.trans('flagrow-bazaar.admin.modal.settings.field.use_cron_for_tasks.toggle')\n        }),\n        m('span', app.translator.trans('flagrow-bazaar.admin.modal.settings.field.use_cron_for_tasks.description', {\n          a: <a href=\"https://github.com/flagrow/bazaar/wiki/Cron-task-processing\" target=\"_blank\"/>\n        }))\n      ]),\n      m('div', { className: 'Form-group' }, [\n        m('label', { for: 'bazaar-api-token' }, app.translator.trans('flagrow-bazaar.admin.modal.settings.field.token.label')),\n        m('input', {\n          id: 'bazaar-api-token',\n          className: 'FormControl',\n          bidi: this.setting('flagrow.bazaar.api_token')\n        }),\n        m('span', app.translator.trans('flagrow-bazaar.admin.modal.settings.field.token.description'))\n      ])\n    ];\n  }\n}\n","import Switch from 'flarum/components/Switch';\nimport SettingsModal from 'flarum/components/SettingsModal';\nimport saveSettings from 'flarum/utils/saveSettings';\nimport Button from 'flarum/components/Button';\n\nexport default class DashboardModal extends SettingsModal {\n  title() {\n    return app.translator.trans('flagrow-bazaar.admin.modal.dashboard.title');\n  }\n\n  form() {\n    const flagrowHost = this.props.flagrowHost;\n    const syncing = this.setting('flagrow.bazaar.sync', false);\n\n    return m('div', { className: 'Modal-body' }, [\n        m('p', app.translator.trans('flagrow-bazaar.admin.modal.dashboard.sync.description', { host: flagrowHost })),\n        Switch.component({\n          state: (syncing() === true || syncing() == 1),\n          onchange: this.updateSetting.bind(this, syncing, 'flagrow.bazaar.sync'),\n          children: app.translator.trans('flagrow-bazaar.admin.modal.dashboard.sync.switch', { host: flagrowHost })\n        }),\n      ]\n    );\n  }\n\n  submitButton() {\n    const flagrowHost = this.props.flagrowHost;\n    return m('div', {className: 'ButtonGroup'}, [\n      Button.component({\n        className: 'Button Connected',\n        icon: 'dashboard',\n        children: app.translator.trans('flagrow-bazaar.admin.modal.dashboard.visit-remote-dashboard'),\n        onclick: () => window.open(flagrowHost + '/home')\n      })\n    ]);\n  }\n\n  /**\n   * Updates setting in database.\n   * @param prop\n   * @param setting\n   * @param value\n   */\n  updateSetting(prop, setting, value) {\n    saveSettings({\n      [setting]: value\n    });\n\n    prop(value);\n  }\n}\n","import app from 'flarum/app';\nimport Component from 'flarum/Component';\nimport LinkButton from 'flarum/components/LinkButton';\nimport Button from 'flarum/components/Button';\nimport FilePermissionsModal from '../modals/FilePermissionsModal';\nimport MemoryLimitModal from '../modals/MemoryLimitModal';\nimport BazaarConnectModal from '../modals/BazaarConnectModal';\nimport BazaarSettingsModal from '../modals/BazaarSettingsModal';\nimport DashboardModal from '../modals/DashboardModal';\n\nexport default class BazaarPageHeader extends Component {\n    view() {\n        return (\n            <div className=\"ExtensionsPage-header\">\n                <div className=\"container\">\n                    {this.header()}\n                </div>\n            </div>\n        );\n    }\n\n    header() {\n        let buttons = [].concat(\n          this.pagesButtons(),\n          this.settingsButton(),\n          this.requirementsButtons(),\n          this.connectedButtons(),\n        );\n\n        return m('div', {className: 'ButtonGroup'}, buttons);\n    }\n\n    settingsButton() {\n      return [\n        Button.component({\n          className: 'Button Button--icon',\n          icon: 'fas fa-cog',\n          onclick: () => app.modal.show(new BazaarSettingsModal)\n        })\n      ];\n    }\n    /**\n     * Loads a list of buttons that give insight in the state of this installation.\n     * @returns {Array}\n     */\n    requirementsButtons() {\n        let memory_limit_met = app.data.settings['flagrow.bazaar.php.memory_limit-met'] || false;\n        let memory_limit = app.data.settings['flagrow.bazaar.php.memory_limit'];\n        let memory_requested = app.data.settings['flagrow.bazaar.php.memory_requested'];\n        let file_permissions = app.data.settings['flagrow.bazaar.file-permissions'] || [];\n\n        let components = [];\n\n        if (!memory_limit_met) {\n            components.push(\n                Button.component({\n                    className: 'Button Button--icon Requirement-MemoryLimit',\n                    icon: 'fas fa-signal',\n                    onclick: () => app.modal.show(new MemoryLimitModal({memory_requested, memory_limit}))\n                })\n            );\n        }\n\n        if (file_permissions.length > 0) {\n            components.push(Button.component({\n                className: 'Button Button--icon Requirement-FilePermissions',\n                icon: 'fas fa-hdd',\n                onclick: () => app.modal.show(new FilePermissionsModal({file_permissions}))\n            }));\n        }\n\n        return components;\n    }\n\n    connectedButtons() {\n        let connected = this.props.connected;\n        let flagrowHost = app.data.settings['flagrow.bazaar.flagrow-host'] || 'https://flagrow.io';\n\n        if (connected) {\n            return [\n                Button.component({\n                    className: 'Button Button--icon Connected',\n                    icon: 'fas fa-dashboard',\n                    onclick: () => app.modal.show(new DashboardModal({\n                        flagrowHost\n                    }))\n                }),\n            ]\n        }\n\n        return [\n            Button.component({\n                className: 'Button Button--icon Connect',\n                icon: 'fas fa-plug',\n                onclick: () => app.modal.show(new BazaarConnectModal({flagrowHost}))\n            }),\n        ]\n    }\n\n    pagesButtons() {\n        // Sometimes no route has been set as the current one\n        if (typeof app.current === 'undefined') {\n            return null;\n        }\n\n        const routeName = app.current.props.routeName;\n        let links = [];\n\n        links.push(LinkButton.component({\n            className: 'Button Button--icon',\n            icon: 'fas fa-shopping-bag',\n            href: app.route('flagrow-bazaar'),\n            title: app.translator.trans('flagrow-bazaar.admin.header.extensions'),\n            active: routeName === 'flagrow-bazaar'\n        }));\n\n        links.push(LinkButton.component({\n            className: 'Button Button--icon',\n            icon: 'fas fa-history',\n            href: app.route('flagrow-bazaar-tasks'),\n            title: app.translator.trans('flagrow-bazaar.admin.header.tasks'),\n            active: routeName === 'flagrow-bazaar-tasks'\n        }));\n\n        return links;\n    }\n}\n","import Component from \"flarum/Component\";\nimport ExtensionRepository from \"../utils/ExtensionRepository\";\nimport ExtensionList from \"./ExtensionList\";\nimport ExtensionSearch from \"./ExtensionSearch\";\nimport BazaarPageHeader from './BazaarPageHeader';\n\n\nexport default class BazaarPage extends Component {\n    init() {\n        app.current = this;\n\n        this.authorized = (app.data.settings['flagrow.bazaar.api_token'] || '').length > 0;\n        this.connected = app.data.settings['flagrow.bazaar.connected'] && app.data.settings['flagrow.bazaar.connected'] !== '0';\n        this.loading = m.prop(true);\n\n        this.params = this.params();\n\n        this.repository = new ExtensionRepository(this.loading);\n\n        this.extensionList = new ExtensionList({\n            params: this.params,\n            loading: this.loading,\n            repository: this.repository,\n            connected: this.connected,\n            authorized: this.authorized\n        });\n\n        this.search = ExtensionSearch.component({params: this.params, onsubmit: this.updateResults.bind(this)});\n    }\n\n    updateResults(params) {\n        this.params = params;\n\n        this.extensionList.update(params);\n    }\n\n    view() {\n        return m('div', {className: 'ExtensionsPage Bazaar'}, [\n            BazaarPageHeader.component({\n                connected: this.connected\n            }),\n            m('div', {className: 'ExtensionsPage-list'}, [\n                m('div', {className: 'container'}, [\n                    this.search,\n                    this.extensionList.render()\n                ])\n            ]),\n        ]);\n    }\n\n    /**\n     * Get URL parameters that stick between filter changes.\n     *\n     * @return {Object}\n     */\n    stickyParams() {\n        return {\n            sort: m.route.param('sort'),\n            q: m.route.param('q')\n        };\n    }\n\n\n    /**\n     * Get parameters to pass to the DiscussionList component.\n     *\n     * @return {Object}\n     */\n    params() {\n        const params = this.stickyParams();\n\n        params.filter = m.route.param('filter');\n\n        return params;\n    }\n}\n","import app from 'flarum/app';\n\nexport default class ExtensionRepository {\n    constructor(loading) {\n        this.tasks = m.prop([]);\n        this.nextPageUrl = null;\n        this.loading = loading;\n        this.resetNavigation();\n    }\n\n    loadNextPage() {\n        if (this.loading() || !this.nextPageUrl) {\n            return;\n        }\n\n        this.loading(true);\n\n        app.request({\n            method: 'GET',\n            url: this.nextPageUrl\n        }).then(result => {\n            const newTasks = result.data.map(data => app.store.createRecord('bazaar-tasks', data));\n            this.tasks(newTasks);\n            this.nextPageUrl = null;\n            this.loading(false);\n\n            m.redraw();\n        });\n    }\n\n    resetNavigation() {\n        this.loading(false);\n        this.nextPageUrl = app.forum.attribute('apiUrl') + '/bazaar/tasks';\n        this.tasks([]);\n    }\n\n}\n","import app from 'flarum/app';\nimport Component from \"flarum/Component\";\nimport icon from \"flarum/helpers/icon\";\nimport Button from \"flarum/components/Button\";\nimport humanTime from 'flarum/helpers/humanTime';\nimport fullTime from 'flarum/helpers/fullTime';\n\nexport default class TaskListItem extends Component {\n    init() {\n        this.extended = m.prop(false);\n    }\n\n    view() {\n        const task = this.props.task;\n        const iconName = (function() {\n            switch (task.status()) {\n                case 'success':\n                    return 'fas fa-check';\n                case 'exception':\n                    return 'fas fa-exclamation';\n                case 'working':\n                    return 'fas fa-spinner';\n            }\n            return 'fas fa-clock';\n        })();\n\n        // We need to wrap items in a tbody because Mithril 0.2 and therefore flarum/Component does not allow a list of vnodes to be returned from a view\n        // And we can't wrap <tr> in anything else without breaking the table\n        // Having multiple <tbody> does not seem to be too much an issue https://stackoverflow.com/a/3076790/3133038\n        return (\n            <tbody className={ 'TaskListItem status-' + task.status() }>\n                <tr>\n                    <td className=\"time-column\">{ humanTime(task.created_at()) }</td>\n                    <td className=\"status-column\" title={ app.translator.trans('flagrow-bazaar.admin.page.task.status.' + (task.status() !== null ? task.status() : 'unknown')) }><div className=\"status\">{ icon(iconName) }</div></td>\n                    <td className=\"command-column\">\n                        { app.translator.trans('flagrow-bazaar.admin.page.task.command.' + task.command(), {extension: (<strong>{ task.package() }</strong>)}) }\n                    </td>\n                    <td className=\"details-column\">\n                        { Button.component({\n                            icon: 'fas fa-plus',\n                            className: 'Button',\n                            onclick: () => { this.extended(!this.extended()); }\n                        }) }\n                    </td>\n                </tr>\n                { this.extended() ? (\n                    <tr>\n                        <td className=\"output-column\" colspan=\"4\">\n                            <dl>\n                                <dt>{ app.translator.trans('flagrow-bazaar.admin.page.task.attribute.created_at') }</dt>\n                                <dd>{ fullTime(task.created_at()) }</dd>\n                            </dl>\n                            <dl>\n                                <dt>{ app.translator.trans('flagrow-bazaar.admin.page.task.attribute.started_at') }</dt>\n                                <dd>{ fullTime(task.started_at()) }</dd>\n                            </dl>\n                            <dl>\n                                <dt>{ app.translator.trans('flagrow-bazaar.admin.page.task.attribute.finished_at') }</dt>\n                                <dd>{ fullTime(task.finished_at()) }</dd>\n                            </dl>\n                            <p>{ app.translator.trans('flagrow-bazaar.admin.page.task.header.output') }</p>\n                            <pre className=\"output\">{ task.output() }</pre>\n                        </td>\n                    </tr>\n                ) : null}\n            </tbody>\n        );\n    }\n}\n","import app from 'flarum/app';\nimport Component from 'flarum/Component';\nimport TaskRepository from './../utils/TaskRepository';\nimport BazaarPageHeader from './BazaarPageHeader';\nimport TaskListItem from './TaskListItem';\nimport BazaarLoader from './BazaarLoader';\n\nexport default class TasksPage extends Component {\n    init() {\n        // Used in the header\n        app.current = this;\n\n        this.loading = m.prop(false);\n        this.repository = new TaskRepository(this.loading);\n        this.repository.loadNextPage();\n        this.loader = BazaarLoader.component({loading: this.loading});\n        this.connected = app.data.settings['flagrow.bazaar.connected'] && app.data.settings['flagrow.bazaar.connected'] !== '0';\n    }\n\n    view() {\n        return (\n            <div className=\"ExtensionsPage Bazaar TaskPage\">\n                {BazaarPageHeader.component({connected: this.connected})}\n\n                <div className=\"ExtensionsPage-list\">\n                    <div className=\"container\">\n                        { this.taskGroups().map(\n                            group => group.tasks.length ? (\n                                <div>\n                                    <h2>{ group.title }</h2>\n                                    <table className=\"TaskPage-table\">\n                                        <thead>\n                                        <tr>\n                                            <th className=\"time-column\">{ app.translator.trans('flagrow-bazaar.admin.page.task.header.time') }</th>\n                                            <th className=\"status-column\">{ app.translator.trans('flagrow-bazaar.admin.page.task.header.status') }</th>\n                                            <th>{ app.translator.trans('flagrow-bazaar.admin.page.task.header.command') }</th>\n                                            <th className=\"details-column\">{ app.translator.trans('flagrow-bazaar.admin.page.task.header.details') }</th>\n                                        </tr>\n                                        </thead>\n                                        { group.tasks.map(\n                                            task => m(TaskListItem, {task: task})\n                                        ) }\n                                    </table>\n                                </div>\n                            ) : null\n                        ) }\n                    </div>\n                </div>\n                { this.loader }\n            </div>\n        );\n    }\n\n    /**\n     * Split tasks into three groups: today, this month and older\n     */\n    taskGroups() {\n        let taskGroups = [\n            {\n                title: app.translator.trans('flagrow-bazaar.admin.page.task.group.today'),\n                tasks: []\n            },\n            {\n                title: app.translator.trans('flagrow-bazaar.admin.page.task.group.lastmonth'),\n                tasks: []\n            },\n            {\n                title: app.translator.trans('flagrow-bazaar.admin.page.task.group.older'),\n                tasks: []\n            }\n        ];\n        let currentGroup = 0;\n\n        // Milliseconds from 1 January 1970 00:00:00 UTC\n        const today = (new Date()).setHours(0,0,0,0);\n\n        this.repository.tasks().forEach(task => {\n            // Milliseconds from 1 January 1970 00:00:00 UTC\n            const taskDate = new Date(task.created_at()).setHours(0,0,0,0);\n\n            switch (currentGroup) {\n                case 0:\n                    if (taskDate === today) {\n                        taskGroups[currentGroup].tasks.push(task);\n                    } else {\n                        currentGroup++;\n                    }\n                    break;\n                case 1:\n                    // Check if the date is within the last 30 days\n                    if ((today - taskDate) / (1000 * 3600 * 24) <= 30) {\n                        taskGroups[currentGroup].tasks.push(task);\n                    } else {\n                        currentGroup++;\n                    }\n                    break;\n                default:\n                    taskGroups[currentGroup].tasks.push(task);\n            }\n        });\n\n        return taskGroups;\n    }\n}\n","import { extend } from 'flarum/extend';\nimport app from 'flarum/app';\nimport Extension from './models/Extension';\nimport Task from './models/Task';\nimport addBazaarPage from './addBazaarPage';\nimport addTasksPage from './addTasksPage';\n\napp.initializers.add('flagrow-bazaar', app => {\n    app.store.models['bazaar-extensions'] = Extension;\n    app.store.models['bazaar-tasks'] = Task;\n\n    addBazaarPage();\n    addTasksPage();\n});\n","import {extend} from 'flarum/extend';\nimport app from 'flarum/app';\nimport AdminNav from 'flarum/components/AdminNav';\nimport AdminLinkButton from 'flarum/components/AdminLinkButton';\nimport BazaarPage from './components/BazaarPage';\n\nexport default function () {\n    // create the route\n    app.routes['flagrow-bazaar'] = {path: '/flagrow/bazaar', component: BazaarPage.component()};\n    // settings toggle on native extensions page\n    app.extensionSettings['flagrow-bazaar'] = () => m.route(app.route('flagrow-bazaar'));\n    // Add tab to admin menu\n    extend(AdminNav.prototype, 'items', items => {\n        items.add('flagrow-bazaar', AdminLinkButton.component({\n            href: app.route('flagrow-bazaar'),\n            icon: 'fas fa-shopping-bag',\n            children: app.translator.trans('flagrow-bazaar.admin.nav.title'),\n            description: app.translator.trans('flagrow-bazaar.admin.nav.description')\n        }));\n    });\n}\n","import {extend} from 'flarum/extend';\nimport app from 'flarum/app';\nimport TasksPage from './components/TasksPage';\n\nexport default function () {\n    app.routes['flagrow-bazaar-tasks'] = {path: '/flagrow/bazaar/tasks', component: TasksPage.component()};\n}\n"],"sourceRoot":""}